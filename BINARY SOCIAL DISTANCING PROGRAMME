''' Write a Python program to count the combinations for non-consecutive 1's numbers patterns in a binary number string
where the width of the binary given by the user.

for exmample 
n = 4
all binary string combinations at width 4
        0000
        0001
        0010
        0011
        0100
        0101
        0110
        0111
        1000
        1001
        1010
        1011
        1100
        1101
        1110
        1111

here non-consecutive 1's (consider char 0 is social distance) patterns are:
0001, 0010, 0100, 0101, 1000, 1001, 1010
total count of these patterns is 7

Output at width 4 is 7
Input Format

positive integer n

Constraints

width >= 0

Output Format

integer

Sample Input 0

3
Sample Output 0

4
Explanation 0

for width 3, binary string total combinations patterns 
000
001
010
011
100
101
110
111

valid patterns 001, 010, 100, 101
total count is 4 '''



PROGARMME:--

n=int(input())
a=2**n-1
lst=[]
count=0
for i in range(1,a+1):
    lst.append(bin(i)[2:])
for i in lst:
    if "11" in str(i):
        continue
    else:
        count+=1
print(count)        
